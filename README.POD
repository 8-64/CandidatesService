# =pod

=encoding UTF-8

=head1 NAME

Candidates service

=head1 VERSION

Version 0.1

=head1 SYNOPSIS

  perl bin/setup-db.pl create sqlite db
  perl bin/candidates.psgi

=head1 DESCRIPTION

Simple implementation of service that provides an API to handle candidates

=head2 Setup

=head3 1) Changing configuration file

Edit F<conf/config.yaml> - you can set up there:

=over

=item *

preferred PSGI server

=item *

port to listen to

=item *

SSL parameters

=item *

Database driver and database credentials

=item *

Whether authentification is enabled, plus allowed users and password digests

=back

=head3 2) Creating the database

Run C<perl bin/setup-db.pl create sqlite db> It will display something like this:

  perl setup-db.pl create sqlite db
  Running task [create_sqlite_db]
  Running [GitHub/CandidatesService/sql/create_sqlite_db.sql]
  Executing [DROP TABLE IF EXISTS CANDIDATES] OK
  Executing [DROP TABLE IF EXISTS FILES] OK
  Executing [CREATE TABLE FILES (
      LETTER_ID VARCHAR(64) PRIMARY KEY,
    ...] OK
  Executing [CREATE TABLE CANDIDATES (
      CANDIDATE_ID integer PRIMARY KEY...] OK
      
=head3 3) Starting the service

Server may be launched this way: C<perl bin/candidates.psgi>

  perl candidates.psgi
  Starting Thrall/0.0305 (MSWin32) https server listening at port 8080
  Thrall/0.0305 (MSWin32): Accepting connections at https://localhost:8080/
  
Now it's running at L<https://localhost:8080/>!

=head2 Testing

Tests are in the F<t> folder. C<prove> may be used to run them. They test basics of this Plack/PSGI based service. Ex:

  CandidatesService>prove
  t\10-Modules-ok.t ... ok
  t\30-DB-basic.t ..... ok
  t\50-API-test.t ..... 1/? 
  t\50-API-test.t ..... ok
  t\55-API-fileops.t .. ok
  All tests successful.
  Files=4, Tests=45,  5 wallclock secs ( 0.05 usr +  0.05 sys =  0.09 CPU)
  Result: PASS
  
=head2 OpenAPI endpoint

OpenAPI endpoint is exposed at I</openapi.json> and I</openapi.yaml> addresses (responding with JSON or YAML documents).

=head1 USED LIBRARIES AND DEPENDENCIES

List of used libraries and dependencies:

=over 4

=item B<Perl>

Expected to be of version 5.24 or greater

=item B<PLACK/PSGI>

And a bunch of corresponding libraries

=back

=head1 SEE ALSO

Respository L<Interviewing|https://github.com/8-64/Interviewing>

=head1 AUTHORS

Vasyl, basilwashere[at]gmail.com, 2019

=head1 CONTRIBUTING

Feel free to

=head1 COPYRIGHT AND LICENSE

This project is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
